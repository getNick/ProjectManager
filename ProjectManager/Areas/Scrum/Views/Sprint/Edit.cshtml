@using DevExtreme.AspNet.Mvc
@model ProjectManager.Models.Sprint
@{
    ViewData["Title"] = "Edit";
    Layout = "~/Areas/Scrum/Views/Shared/_Layout.cshtml";
}

<form action="/Scrum/Sprint/Edit">
    <input type="text" name="sprintId" value="@Model.Id" hidden />
    <div class="row">
        <div class="form-group col-lg-6">
            <label for="usr">Name:</label>
            <input type="text" name="name" class="form-control" id="usr" value="@Model.Team.Name @DateTime.Today">
            <div class="form-group">
                <label for="usr">Description:</label>
                <textarea class="form-control" rows="5" id="comment" name="description">@Model.Description</textarea>
            </div>
            <label for="numberBox">Duration:</label>
            @(Html.DevExtreme().NumberBox().Name("duration").ID("numberBox")
                  .Value(14)
                  .Min(7)
                  .Max(30)
                  .ShowSpinButtons(true).Placeholder("days")
            )
        </div>
        <div class="form-group col-lg-6">
            @if (Model.ListTasks != null)
            {
                foreach (var task in Model.ListTasks)
                {
                    @await Html.PartialAsync("_TaskTemplateWithoutUser", task)
                }
            }
            <input type="button" class="btn btn-dark btn-lg" value="Create new task" onclick="location.href = '@Url.Action("CreateTaskInSprint", "Task", new {sprintId = @Model.Id})'" />
        </div>
    </div>
    <div class="row">
        <div align="right">
            <input type="submit" class="btn btn-dark btn-lg" value="Save" />
        </div>
    </div>
</form>
<script>
    
    function selectedDate_changed(data) {
        getCalendarInstance().option("value", data.value);
    }
    function getFileUploaderInstance() {
        return $("#file-uploader").dxFileUploader("instance");
    }

    function fileUploader_valueChanged(e) {
        var files = e.value;
        if (files.length > 0) {
            $("#selected-files .selected-item").remove();

            $.each(files, function (i, file) {
                var $selectedItem = $("<div />").addClass("selected-item");
                $selectedItem.append(
                    $("<span />").html("Name: " + file.name + "<br/>"),
                );
                $selectedItem.appendTo($("#selected-files"));
            });
            $("#selected-files").show();
        }
        else
            $("#selected-files").hide();
    }

    function range_selector_changed(e) {
        $("#start").val(e.value[0]);
        $("#deadline").val(e.value[1]);
    }

    function uploadMode_changed(e) {
        getFileUploaderInstance().option("uploadMode", e.value);
    }

    function multipleOption_changed(e) {
        getFileUploaderInstance().option("multiple", e.value);
    }
</script>

